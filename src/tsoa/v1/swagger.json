{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserResponseDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TaskResponseDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"completed": {
						"type": "boolean"
					},
					"userId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"title",
					"completed",
					"userId",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateTaskDto": {
				"properties": {
					"title": {
						"type": "string"
					}
				},
				"required": [
					"title"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateTaskDto": {
				"properties": {
					"title": {
						"type": "string"
					},
					"completed": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AuthResponseDto": {
				"properties": {
					"user": {
						"properties": {
							"email": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"email",
							"id"
						],
						"type": "object"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthLoginDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "lemn-backend-interview",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"409": {
						"description": "User already exists"
					}
				},
				"description": "Create a new user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDto"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Users retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponseDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all users",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "User retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Get user by ID",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "User updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Update user by ID",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "User deleted successfully"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Delete user by ID",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/tasks": {
			"get": {
				"operationId": "GetUserTasks",
				"responses": {
					"200": {
						"description": "Tasks retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TaskResponseDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all tasks for the authenticated user",
				"tags": [
					"Tasks"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateTask",
				"responses": {
					"201": {
						"description": "Task created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TaskResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"description": "Create a new task",
				"tags": [
					"Tasks"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateTaskDto"
							}
						}
					}
				}
			}
		},
		"/tasks/{id}": {
			"put": {
				"operationId": "UpdateTask",
				"responses": {
					"200": {
						"description": "Task updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TaskResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Task not found"
					}
				},
				"description": "Update task by ID",
				"tags": [
					"Tasks"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateTaskDto"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteTask",
				"responses": {
					"204": {
						"description": "Task deleted successfully"
					},
					"404": {
						"description": "Task not found"
					}
				},
				"description": "Delete task by ID",
				"tags": [
					"Tasks"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/health": {
			"get": {
				"operationId": "GetHealth",
				"responses": {
					"200": {
						"description": "Service is healthy",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"timestamp": {
											"type": "string"
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"timestamp",
										"status"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Health check endpoint",
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "User registered successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseDto"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"409": {
						"description": "User already exists"
					}
				},
				"description": "Register a new user",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterDto"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Login successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Invalid credentials"
					}
				},
				"description": "Login user",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthLoginDto"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}